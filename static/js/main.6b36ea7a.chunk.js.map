{"version":3,"sources":["components/SearchComponent.js","components/FilterComponent.js","components/Country.js","components/CountryListHelper.js","components/CountryList.js","components/CountryDetails.js","components/Navbar.js","components/App.js","serviceWorker.js","index.js"],"names":["SearchComponent","state","searchTerm","onChangeHandler","event","setState","target","value","onSubmitHandler","preventDefault","props","onSubmit","className","this","type","onChange","placeholder","React","Component","FilterComponent","options","optionsJsx","map","option","key","Country","currencies","c","name","symbol","style","width","src","flag","alt","population","region","to","CountryListHelper","isLoading","role","Object","keys","countries","length","country","CountryList","onSearchSubmit","fetch","then","result","json","data","catch","err","console","log","onFilterSubmit","CountryDetails","countryName","match","params","languages","lang","countryBorders","borders","b","nativeName","subregion","topLevelDomain","capital","Navbar","App","basename","process","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.6b36ea7a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass SearchComponent extends React.Component {\r\n\r\n    state = {\r\n        searchTerm: ''\r\n    }\r\n\r\n    onChangeHandler = (event) => {\r\n        this.setState({ searchTerm: event.target.value });\r\n    }\r\n\r\n    onSubmitHandler = (event) => {\r\n        event.preventDefault();\r\n        this.props.onSubmit(this.state.searchTerm);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"search-component\">\r\n                <form onSubmit={this.onSubmitHandler}>\r\n                    <div className=\"input-group\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\">\r\n                                <i className=\"fas fa-search\"></i>\r\n                            </span>\r\n                        </div>\r\n                        <input \r\n                            type=\"text\" \r\n                            value={this.state.searchTerm}\r\n                            onChange={this.onChangeHandler}\r\n                            className=\"form-control\"\r\n                            placeholder=\"Search for a country..\"\r\n                        />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchComponent;","import React from 'react';\r\n\r\nclass FilterComponent extends React.Component {\r\n    options = [\r\n        'Filter by Region',\r\n        'Africa',\r\n        'Americas',\r\n        'Asia',\r\n        'Europe',\r\n        'Oceania'\r\n    ];\r\n\r\n    onChangeHandler = (event) => {\r\n        this.props.onSubmit(event.target.value);\r\n    }\r\n\r\n    render(){\r\n        let optionsJsx = this.options.map(option => <option key={option} value={option}>{option}</option>);\r\n        return (\r\n            <div className=\"mt-sm-2\">\r\n                <form>\r\n                    <select className=\"form-control\" onChange={this.onChangeHandler}>\r\n                        {optionsJsx}\r\n                    </select>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default FilterComponent;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Country = props => {\r\n    let currencies = props.currencies.map(\r\n        c => <span key={c.name}>{c.name} {c.symbol} </span>\r\n    );\r\n    return (\r\n        <div className=\"col-lg-3 mb-2 p-2 country\">\r\n            <div className=\"card\">\r\n                <img style={{width:'100%'}} src={props.flag} className=\"card-img-top\" alt=\"No img\" />\r\n                <div className=\"card-body\">\r\n                    <h4 className=\"card-title\">{props.name}</h4>\r\n                    <span><b>Population:</b> {props.population}</span><br />\r\n                    <span><b>Region:</b> {props.region}</span><br />\r\n                    <span>\r\n                        <b>Currency:</b> {currencies}\r\n                    </span><br/>\r\n                    <Link to={`/country/${props.name}`} className=\"btn btn-primary mt-1\">View Details</Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Country;","import React from 'react';\r\n\r\nimport Country from  './Country';\r\n\r\nconst CountryListHelper = props => {\r\n    if(props.isLoading){\r\n        return (\r\n            <div className=\"spinner-container\">\r\n                <div className=\"spinner-border text-dark text-center\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>;\r\n            </div>\r\n        );\r\n    } else {\r\n        if(Object.keys(props.countries).length > 0){\r\n            return props.countries.map(country => {\r\n                return <Country name = {country.name} \r\n                    flag = {country.flag} \r\n                    population = {country.population} \r\n                    region = {country.region}\r\n                    currencies = {country.currencies} \r\n                    key = {country.name}\r\n                />; \r\n            });\r\n        } else {\r\n            return <h2>No Countries Found.</h2>\r\n        }\r\n    }\r\n}\r\n\r\nexport default CountryListHelper;","import React from 'react';\r\n\r\nimport SearchComponent from './SearchComponent';\r\nimport FilterComponent from './FilterComponent';\r\nimport CountryListHelper from './CountryListHelper';\r\nimport './countrylist.css';\r\n\r\nclass CountryList extends React.Component {\r\n\r\n    state = {\r\n        countries: [],\r\n        isLoading: false\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({ isLoading: true });\r\n        fetch('https://restcountries.eu/rest/v2/all')\r\n            .then(result => result.json())\r\n            .then(data => this.setState({ countries: data, isLoading: false }))\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    onSearchSubmit = (searchTerm) => {\r\n        this.setState({ isLoading: true });\r\n        fetch(`https://restcountries.eu/rest/v2/name/${searchTerm}`)\r\n            .then(result => result.json())\r\n            .then(data => this.setState({ countries: data, isLoading: false }))\r\n            .catch(err => console.log(err));\r\n    }\r\n    \r\n    onFilterSubmit = (region) => {\r\n        this.setState({ isLoading: true });\r\n        fetch(`https://restcountries.eu/rest/v2/region/${region}`)\r\n            .then(result => result.json())\r\n            .then(data => this.setState({ countries: data, isLoading: false }))\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"country-list container pt-5\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-5 col-md-5\">\r\n                        <SearchComponent onSubmit={this.onSearchSubmit} />\r\n                    </div>\r\n                    <div className=\"col-lg-2 offset-lg-5 col-md-4 offset-md-3\">\r\n                        <FilterComponent onSubmit={this.onFilterSubmit} />\r\n                    </div>\r\n                </div>                  \r\n                <div className=\"row\">\r\n                    <CountryListHelper \r\n                        isLoading={this.state.isLoading} \r\n                        countries={this.state.countries} \r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CountryList;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './countrydetails.css';\r\n\r\nclass CountryDetails extends React.Component {\r\n\r\n    state = {\r\n        country: {},\r\n\r\n    };\r\n\r\n    countryName = this.props.match.params.countryName;\r\n\r\n    componentDidMount(){\r\n        fetch(`https://restcountries.eu/rest/v2/name/${this.countryName}`)\r\n            .then(result => result.json())\r\n            .then(data => this.setState({ country: data[0] }))\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n\r\n    render(){\r\n        let { country } = this.state;\r\n        if(Object.keys(country).length > 0){\r\n\r\n            let languages = country.languages.map(\r\n                lang => <span key={lang.name}>{lang.name} </span>\r\n            );\r\n            let currencies = country.currencies.map(\r\n                c => <span key={c.name}>{c.name} </span>\r\n            );\r\n            let countryBorders = country.borders.map(b => {\r\n                return <span className=\"border\" key={b}>{b} </span>\r\n            });\r\n\r\n            return (\r\n                <div className=\"container country-details pt-5\">\r\n                    <Link to=\"/\" className=\"btn btn-light mt-5\">\r\n                        <i className=\"fas fa-arrow-left\"></i> Back\r\n                    </Link>\r\n                    <div className=\"country row\">\r\n                        <div className=\"col-lg-5 col-md-5 col-sm-12 \">\r\n                            <img style={{ width:\"100%\" }} src={country.flag} alt=\"No img available\" />\r\n                        </div>\r\n                        <div className=\"col-lg-6 col-md-6 col-sm-12 ml-4 pl-4\">\r\n                            <h2><b>{country.name}</b></h2>\r\n                            <div className=\"row country-stats\">\r\n                                <ul className=\"col-lg-6 col-md-6 col-sm-12\">\r\n                                    <li><b>Native Name:</b> {country.nativeName}</li>\r\n                                    <li><b>Population:</b> {country.population}</li>\r\n                                    <li><b>Region:</b> {country.region}</li>\r\n                                    <li><b>Sub Region:</b> {country.subregion}</li>\r\n                                </ul>\r\n                                <ul className=\"col-lg-6 col-md-6 col-sm-12 pl-2\">\r\n                                    <li><b>Top Level Domain:</b> {country.topLevelDomain}</li>\r\n                                    <li><b>Currencies:</b> {currencies}</li>\r\n                                    <li><b>languages:</b> {languages}</li>\r\n                                    <li><b>Capital:</b> {country.capital}</li>\r\n                                </ul>\r\n                            </div>\r\n                            <div className=\"mt-5\"><b>Border Countries: </b> {countryBorders}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else {\r\n            return <div>No Country Found</div>\r\n        }\r\n    }\r\n}\r\n\r\nexport default CountryDetails;","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className=\"navbar navbar-light bg-light\">\r\n            <Link to=\"/\">\r\n                <span className=\"navbar-brand mb-0 h1\">Where in the world?</span>\r\n            </Link>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nimport CountryList from \"./CountryList\";\nimport CountryDetails from \"./CountryDetails\";\nimport Navbar from \"./Navbar\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <div>\n          <Navbar />\n          <Route path=\"/\" exact component = { CountryList } />\n          <Route path=\"/country/:countryName\" component = { CountryDetails } />\n        </div>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}